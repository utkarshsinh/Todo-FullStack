{"ast":null,"code":"var _jsxFileName = \"/Users/utkarshsinh/in28minutes/01-frontend/todo-app/src/components/todo/security/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\n\n// 1: Create Conext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n// Put some state in context\n// 2: Share the created context with other components\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default function AuthProvider({\n  children\n}) {\n  _s2();\n  // Put some state in context\n  // const [number, setNumber] = useState(10)\n  const [isAuthenticated, setAuthenticated] = useState(false);\n  const [username, setUsername] = useState(null);\n\n  // setInterval( () => setNumber(number+1),10000)\n\n  // function login (username, password){\n  //     if (username ==='in28minutes' && password ==='dummy'){\n  //         setAuthenticated(true)\n  //         setUsername(username)\n  //         return true\n\n  //     } else{\n  //         setAuthenticated(false)\n  //         setUsername(null)\n  //         return false\n  //     }\n\n  // }\n\n  function login(username, password) {\n    if (username === 'in28minutes' && password === 'dummy') {\n      setAuthenticated(true);\n      setUsername(username);\n      return true;\n    } else {\n      setAuthenticated(false);\n      setUsername(null);\n      return false;\n    }\n  }\n  function logout() {\n    setAuthenticated(false);\n  }\n\n  // const valueTobeshared = {number, isAuthenticated, setAuthenticated}\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout,\n      username\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"r+hfkL8+aON1x8Go1nUIN28kT5E=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isAuthenticated","setAuthenticated","username","setUsername","login","password","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/utkarshsinh/in28minutes/01-frontend/todo-app/src/components/todo/security/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\n\n// 1: Create Conext\nexport const AuthContext = createContext()\n\n\nexport const useAuth = () => useContext(AuthContext)\n// Put some state in context\n// 2: Share the created context with other components\n\nexport default function AuthProvider({children}){\n    // Put some state in context\n    // const [number, setNumber] = useState(10)\n    const [isAuthenticated, setAuthenticated] = useState(false)\n\n    const [username, setUsername] = useState(null)\n\n    // setInterval( () => setNumber(number+1),10000)\n\n    // function login (username, password){\n    //     if (username ==='in28minutes' && password ==='dummy'){\n    //         setAuthenticated(true)\n    //         setUsername(username)\n    //         return true\n    \n    //     } else{\n    //         setAuthenticated(false)\n    //         setUsername(null)\n    //         return false\n    //     }\n    \n    // }\n\n    function login (username, password){\n        if (username ==='in28minutes' && password ==='dummy'){\n            setAuthenticated(true)\n            setUsername(username)\n            return true\n    \n        } else{\n            setAuthenticated(false)\n            setUsername(null)\n            return false\n        }\n    \n    }\n\n    function logout(){\n        setAuthenticated(false)\n    }\n    \n\n    // const valueTobeshared = {number, isAuthenticated, setAuthenticated}\n    return(\n        <AuthContext.Provider value = {{isAuthenticated, login, logout, username}}>\n            {children}\n        </AuthContext.Provider>\n    )\n}"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAE3D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAG1C,OAAO,MAAMM,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,WAAW,CAAC;AAAA;AACpD;AACA;AAAAE,EAAA,CAFaD,OAAO;AAIpB,eAAe,SAASE,YAAYA,CAAC;EAACC;AAAQ,CAAC,EAAC;EAAAC,GAAA;EAC5C;EACA;EACA,MAAM,CAACC,eAAe,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE9C;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,SAASa,KAAKA,CAAEF,QAAQ,EAAEG,QAAQ,EAAC;IAC/B,IAAIH,QAAQ,KAAI,aAAa,IAAIG,QAAQ,KAAI,OAAO,EAAC;MACjDJ,gBAAgB,CAAC,IAAI,CAAC;MACtBE,WAAW,CAACD,QAAQ,CAAC;MACrB,OAAO,IAAI;IAEf,CAAC,MAAK;MACFD,gBAAgB,CAAC,KAAK,CAAC;MACvBE,WAAW,CAAC,IAAI,CAAC;MACjB,OAAO,KAAK;IAChB;EAEJ;EAEA,SAASG,MAAMA,CAAA,EAAE;IACbL,gBAAgB,CAAC,KAAK,CAAC;EAC3B;;EAGA;EACA,oBACIR,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAI;MAACR,eAAe;MAAEI,KAAK;MAAEE,MAAM;MAAEJ;IAAQ,CAAE;IAAAJ,QAAA,EACrEA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B;AAACb,GAAA,CAhDuBF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}