{"ast":null,"code":"var _jsxFileName = \"/Users/utkarshsinh/in28minutes/01-frontend/todo-app/src/components/todo/ListTodosComponent.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { retrieveAllTodosForUsername } from \"./api/TodoApiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListTodosComponent() {\n  _s();\n  // const today = new Date();\n\n  useEffect(() => refreshTodos(), []);\n  const [todos, setTodos] = useState([]);\n  function refreshTodos() {\n    retrieveAllTodosForUsername('in28minutes').then(response => {\n      setTodos(response.data);\n    }).catch(error => console.log(error));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Things you want to do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Is Done?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Target Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: todo.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: todo.done.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: todo.targetDate.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 39\n            }, this)]\n          }, todo.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 35\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(ListTodosComponent, \"E/Y/Ia8Pbp2FMEC+uATwVLpyGG8=\");\n_c = ListTodosComponent;\nvar _c;\n$RefreshReg$(_c, \"ListTodosComponent\");","map":{"version":3,"names":["useEffect","useState","retrieveAllTodosForUsername","jsxDEV","_jsxDEV","ListTodosComponent","_s","refreshTodos","todos","setTodos","then","response","data","catch","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","todo","description","done","toString","targetDate","id","_c","$RefreshReg$"],"sources":["/Users/utkarshsinh/in28minutes/01-frontend/todo-app/src/components/todo/ListTodosComponent.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { retrieveAllTodosForUsername } from \"./api/TodoApiService\";\n\nexport default function ListTodosComponent() {\n\n    // const today = new Date();\n\n    useEffect (() => refreshTodos(), [])\n\n    const [todos, setTodos] = useState([])\n\n    function refreshTodos() {\n\n        retrieveAllTodosForUsername('in28minutes')\n        .then(response =>{\n            \n            setTodos(response.data)\n        }\n        )\n        .catch(error => console.log(error))\n\n    }\n    \n    return (\n        <div className=\"conainer\">\n           <h1>Things you want to do</h1> \n           <div>\n               <table className='table'>\n                   <thead>\n                       <tr>\n                           {/* <td>Id</td> */}\n                           <th>Description</th>\n                           <th>Is Done?</th>\n                           <th>Target Date</th>\n                       </tr>\n                   </thead>\n                   <tbody>\n                      {\n                          todos.map(\n                              todo => (\n                                  <tr key = {todo.id}>\n                                      {/* <td>{todo.id}</td> */}\n                                      <td>{todo.description}</td>\n                                      <td>{todo.done.toString()}</td>\n                                      {/* <td>{todo.targetDate.toDateString()}</td> */}\n                                      <td>{todo.targetDate.toString()}</td>\n                                  </tr>\n                              )\n                          )\n                      }\n                   </tbody>\n               </table>\n           </div>\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}