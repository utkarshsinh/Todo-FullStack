{"ast":null,"code":"var _jsxFileName = \"/Users/utkarshsinh/in28minutes/01-frontend/todo-app/src/components/todo/security/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { apiClient } from \"../api/ApiClient\";\nimport { executeBasicAuthenticationService } from \"../api/AuthenticationApiService\";\n\n// 1: Create Conext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n// Put some state in context\n// 2: Share the created context with other components\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default function AuthProvider({\n  children\n}) {\n  _s2();\n  // Put some state in context\n  // const [number, setNumber] = useState(10)\n  const [isAuthenticated, setAuthenticated] = useState(false);\n  const [username, setUsername] = useState(null);\n  const [token, setToken] = useState(null);\n\n  // setInterval( () => setNumber(number+1),10000)\n\n  // function login (username, password){\n  //     if (username ==='in28minutes' && password ==='dummy'){\n  //         setAuthenticated(true)\n  //         setUsername(username)\n  //         return true\n\n  //     } else{\n  //         setAuthenticated(false)\n  //         setUsername(null)\n  //         return false\n  //     }\n\n  // }\n\n  async function login(username, password) {\n    const baToken = 'Basic ' + window.btoa(username + \":\" + password);\n    try {\n      const response = await executeBasicAuthenticationService(baToken);\n      if (response.status == 200) {\n        setAuthenticated(true);\n        setUsername(username);\n        setToken(baToken);\n        apiClient.interceptors.request.use(config => {\n          console.log('intercepting and adding token');\n          config.headers.Authorization = baToken;\n          return config;\n        });\n        return true;\n      } else {\n        logout();\n        return false;\n      }\n    } catch (error) {\n      logout();\n      return false;\n    }\n  }\n  function logout() {\n    setAuthenticated(false);\n    setUsername(null);\n    setToken(null);\n  }\n\n  // const valueTobeshared = {number, isAuthenticated, setAuthenticated}\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout,\n      username,\n      token\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"TN8WqXx3uVoSLaFezWMtgn1oPEU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","apiClient","executeBasicAuthenticationService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isAuthenticated","setAuthenticated","username","setUsername","token","setToken","login","password","baToken","window","btoa","response","status","interceptors","request","use","config","console","log","headers","Authorization","logout","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/utkarshsinh/in28minutes/01-frontend/todo-app/src/components/todo/security/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\nimport { apiClient } from \"../api/ApiClient\";\nimport { executeBasicAuthenticationService } from \"../api/AuthenticationApiService\";\n\n// 1: Create Conext\nexport const AuthContext = createContext()\n\n\nexport const useAuth = () => useContext(AuthContext)\n// Put some state in context\n// 2: Share the created context with other components\n\nexport default function AuthProvider({children}){\n    // Put some state in context\n    // const [number, setNumber] = useState(10)\n    const [isAuthenticated, setAuthenticated] = useState(false)\n\n    const [username, setUsername] = useState(null)\n\n    const [token, setToken] = useState(null)\n\n    // setInterval( () => setNumber(number+1),10000)\n\n    // function login (username, password){\n    //     if (username ==='in28minutes' && password ==='dummy'){\n    //         setAuthenticated(true)\n    //         setUsername(username)\n    //         return true\n    \n    //     } else{\n    //         setAuthenticated(false)\n    //         setUsername(null)\n    //         return false\n    //     }\n    \n    // }\n\n    async function login (username, password){\n\n        const baToken = 'Basic ' + window.btoa(username + \":\" + password)\n\n        \n\n\n        try {\n\n            const response = await executeBasicAuthenticationService(baToken)\n\n            if (response.status==200){\n                setAuthenticated(true)\n                setUsername(username)\n                setToken(baToken)\n\n                apiClient.interceptors.request.use(\n                    (config) => {\n                        console.log('intercepting and adding token')\n                        config.headers.Authorization = baToken\n                        return config\n                    }\n                )\n                return true\n        \n            } else{\n                logout()\n                return false\n            }\n\n        } catch(error) {\n            logout()\n            return false\n        }\n     \n    }\n\n    function logout(){\n        setAuthenticated(false)\n        setUsername(null)\n        setToken(null)\n    }\n    \n\n    // const valueTobeshared = {number, isAuthenticated, setAuthenticated}\n    return(\n        <AuthContext.Provider value = {{isAuthenticated, login, logout, username, token}}>\n            {children}\n        </AuthContext.Provider>\n    )\n}"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,iCAAiC,QAAQ,iCAAiC;;AAEnF;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAG1C,OAAO,MAAMQ,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMR,UAAU,CAACM,WAAW,CAAC;AAAA;AACpD;AACA;AAAAE,EAAA,CAFaD,OAAO;AAIpB,eAAe,SAASE,YAAYA,CAAC;EAACC;AAAQ,CAAC,EAAC;EAAAC,GAAA;EAC5C;EACA;EACA,MAAM,CAACC,eAAe,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAExC;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,eAAeiB,KAAKA,CAAEJ,QAAQ,EAAEK,QAAQ,EAAC;IAErC,MAAMC,OAAO,GAAG,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACR,QAAQ,GAAG,GAAG,GAAGK,QAAQ,CAAC;IAKjE,IAAI;MAEA,MAAMI,QAAQ,GAAG,MAAMpB,iCAAiC,CAACiB,OAAO,CAAC;MAEjE,IAAIG,QAAQ,CAACC,MAAM,IAAE,GAAG,EAAC;QACrBX,gBAAgB,CAAC,IAAI,CAAC;QACtBE,WAAW,CAACD,QAAQ,CAAC;QACrBG,QAAQ,CAACG,OAAO,CAAC;QAEjBlB,SAAS,CAACuB,YAAY,CAACC,OAAO,CAACC,GAAG,CAC7BC,MAAM,IAAK;UACRC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;UAC5CF,MAAM,CAACG,OAAO,CAACC,aAAa,GAAGZ,OAAO;UACtC,OAAOQ,MAAM;QACjB,CACJ,CAAC;QACD,OAAO,IAAI;MAEf,CAAC,MAAK;QACFK,MAAM,CAAC,CAAC;QACR,OAAO,KAAK;MAChB;IAEJ,CAAC,CAAC,OAAMC,KAAK,EAAE;MACXD,MAAM,CAAC,CAAC;MACR,OAAO,KAAK;IAChB;EAEJ;EAEA,SAASA,MAAMA,CAAA,EAAE;IACbpB,gBAAgB,CAAC,KAAK,CAAC;IACvBE,WAAW,CAAC,IAAI,CAAC;IACjBE,QAAQ,CAAC,IAAI,CAAC;EAClB;;EAGA;EACA,oBACIZ,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAI;MAACxB,eAAe;MAAEM,KAAK;MAAEe,MAAM;MAAEnB,QAAQ;MAAEE;IAAK,CAAE;IAAAN,QAAA,EAC5EA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B;AAAC7B,GAAA,CA3EuBF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}